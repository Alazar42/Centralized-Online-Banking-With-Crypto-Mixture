"""
Django settings for shiling_market project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-s!ey82rc_f(^2k2fw)k!$^jbne2@3ut_gz&$44m02zo3-e%nhc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api',
    'corsheaders'
]

AUTH_USER_MODEL = 'api.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

## Centralized Online Banking With Crypto Mixture

This Django project provides a centralized online banking system with a mixture of traditional and cryptocurrency functionalities. It includes user authentication, product management, and transaction handling features.

### Setup Instructions

To clone and set up the Django project, follow these steps:

1. **Clone the Repository:**
   ```
   git clone https://github.com/Alazar42/Centralized-Online-Banking-With-Crypto-Mixture.git
   ```

2. **Navigate to Project Directory:**
   ```
   cd Centralized-Online-Banking-With-Crypto-Mixture
   ```

3. **Install Dependencies:**
   ```
   pip install -r requirements.txt
   ```

4. **Run Migrations:**
   ```
   python manage.py migrate
   ```

5. **Create Superuser (Optional):**
   ```
   python manage.py createsuperuser
   ```

6. **Start the Development Server:**
   ```
   python manage.py runserver
   ```

7. **Access the Application:**
   Open a web browser and go to `http://127.0.0.1:8000/` to view the application.

### URLs and Views

The `urlpatterns` in the `urls.py` file define the URL routes and their corresponding views:

```python
from django.urls import path
from . import views

urlpatterns = [
    path('', views.home),

    path('auth-register', views.user_register),
    path('auth-login', views.user_login),
    path('auth-logout', views.user_logout),
    
    path('products', views.products),
    path('products/<int:id>', views.each_product),
    path('products/<int:id>/buy', views.buy_product),
    # path('buy-shiling'),

    # path('transactions'),
    # path('')
]
```

- `/`: Home page view.
- `/auth-register`: User registration view.
- `/auth-login`: User login view.
- `/auth-logout`: User logout view.
- `/products`: View to display products.
- `/products/<int:id>`: View to display details of a specific product identified by its ID.
- `/products/<int:id>/buy`: View to handle product purchase.

The commented-out routes are placeholders for future functionality and will be updated accordingly.

### Contribution Guidelines

If you would like to contribute to this project, please follow these guidelines:

- Fork the repository.
- Create your feature branch (`git checkout -b feature/your-feature`).
- Commit your changes (`git commit -am 'Add some feature'`).
- Push to the branch (`git push origin feature/your-feature`).

### License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.


ROOT_URLCONF = 'shiling_market.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shiling_market.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
